<?xml version="1.0" encoding="UTF-8"?>
<!-- (C) 2015-2016 OpenStack Foundation, All Rights Reserved -->
<!--*******************************************************-->
<!--         Import Common XML Entities                    -->
<!--                                                       -->
<!--     You can resolve the entities with xmllint         -->
<!--                                                       -->
<!--        xmllint -noent metadefs-namespaces-v2.wadl     -->
<!--*******************************************************-->
<!DOCTYPE application [
   <!ENTITY % common  SYSTEM "../common.ent">
   %common;
   <!ENTITY % common_project  SYSTEM "../../../../common_project.ent">
   %common_project;
   ]>
<application xmlns="http://wadl.dev.java.net/2009/02"
    xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
    xmlns:db="http://docbook.org/ns/docbook"
    xmlns:common="http://docs.openstack.org/common/api/v1.0"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:wadl="http://wadl.dev.java.net/2009/02"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:imageapi="http://docs.openstack.org/image/api/v2"
    xmlns:csapi="http://docs.openstack.org/image/api/v2">
    <grammars>
        <include href="../xsd/api.xsd"/>
        <include href="../xsd/api-common.xsd"/>
    </grammars>
    <!--*******************************************************-->
    <!--             All Resources                             -->
    <!--*******************************************************-->
    <resources base="https://glance.example.com/"
        xml:id="os-metadef-namespace-v2">
        <resource id="v2" path="//v2">
            <resource id="metadefs" path="metadefs">
                <resource id="namespaces" type="#NamespaceList" path="namespaces">
                    <method href="#createNamespace-v2"/>
                    <method href="#listNamespaces-v2"/>
                    <resource path="{namespace_id}" id="namespace_id">
                        &namespace_idTemplateParameter;
                        <method href="#showNamespace-v2"/>
                        <method href="#updateNamespace-v2"/>
                        <method href="#deleteNamespace-v2"/>
                    </resource>
                </resource>
            </resource>
        </resource>
    </resources>
    <!--*******************************************************-->
    <!--               All Methods                             -->
    <!--*******************************************************-->
    <!-- Namespace methods -->
    <method name="POST" id="createNamespace-v2">
        <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook"
            title="Create namespace">
            <para role="shortdesc">
                Creates a namespace.
            </para>
            <para>
                The <code>Location</code> response header
                contains the newly-created URI for the namespace.
            </para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json"
                element="image">
                <wadl:doc xml:lang="EN"
                    xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code href="../samples/metadef-namespace-create-request.json"/>
                </wadl:doc>
                <!-- &namespaceRequestParameter;
                &display_nameRequestParameter;
                &namespace-descriptionRequestParameter;
                &namespace-visibilityRequestParameter;
                &namespace-protectedRequestParameter;
                &propertiesRequestParameter;
                &objectsRequestParameter;
                &resource_type_associationsRequestParameter; -->
            </representation>
        </request>
        <response status="201">
            <representation mediaType="application/json">
                <wadl:doc xml:lang="EN"
                    xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code
                        href="../samples/metadef-namespace-create-response.json"/>
                </wadl:doc>
                &namespaceResponseParameter;
                &display_nameResponseParameter;
                &namespace-descriptionResponseParameter;
                &namespace-visibilityResponseParameter;
                &namespace-protectedResponseParameter;
                &namespace-propertiesResponseParameter;
                &objectsResponseParameter;
                &resource_type_associationsResponseParameter;
                &hypervisor_typeResponseParameter;
                &enumResponseParameter;
            </representation>
        </response>
    </method>
    <method name="GET" id="listNamespaces-v2">
        <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook"
            title="List namespaces">
            <para role="shortdesc">Lists public namespaces.</para>
            <para>
                Returns a subset in the larger collection of namespaces and a
                link that you can use to get the next set of namespaces. Check
                for the presence of a <code>next</code> link and use it as the
                URI in a subsequent HTTP GET request. Follow this pattern
                until a <code>next</code> link is no longer provided. The
                <code>next</code> link preserves any query parameters that you
                send in your initial request. You can use the
                <code>first</code> link to return to the first page in the
                collection. If you prefer to paginate through namespaces
                manually, use the <code>limit</code> and <code>marker</code>
                parameters.
            </para>
            <para>
                The list operation accepts the <code>resource_types</code> and
                <code>visibility</code> query parameters, which you can use to filter
                the response.
            </para>
            <para>
                To sort the results of this operation, use the
                <code>sort_key</code> and <code>sort_dir</code> parameters.
                The API uses the natural sorting order in the namespace
                attribute that you provide as the <code>sort_key</code>
                parameter.
            </para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                &limitMarkerReqParameter;
                &visibilityQueryParameter;
                &resource_typesQueryParameter;
                &sort_keyQueryParameter;
                &sort_dirQueryParameter;
             </representation>
        </request>
        <response status="200">
            <representation mediaType="application/json">
                <wadl:doc xml:lang="EN"
                    xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code
                        href="../samples/metadef-namespaces-list-response.json"/>
                </wadl:doc>
                &namespacesObjectParameter;
                &namespaceResponseParameter;
                &display_nameResponseParameter;
                &namespace-descriptionResponseParameter;
                &namespace-visibilityResponseParameter;
                &namespace-protectedResponseParameter;
                &resource_type_associationsResponseParameter;
             </representation>
        </response>
    </method>
    <method name="GET" id="showNamespace-v2">
        <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook"
            title="Get namespaces details">
            <para role="shortdesc">
                Gets details for a namespace.
            </para>
            <para>
                The response body shows a single namespace entity with all
                details including properties and objects.
            </para>
        </wadl:doc>
        <response status="200">
            <representation mediaType="application/json">
                <wadl:doc xml:lang="EN"
                    xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code
                        href="../samples/metadef-namespace-details-response.json"/>
                </wadl:doc>
            </representation>
        </response>
    </method>
    <method name="PUT" id="updateNamespace-v2">
        <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook"
            title="Update namespace">
            <para role="shortdesc">
                Updates a namespace.
            </para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <wadl:doc xml:lang="EN"
                    xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code href="../samples/metadef-namespace-update-request.json"/>
                </wadl:doc>
            </representation>
        </request>
        <response status="200">
            <representation mediaType="application/json">
                <wadl:doc xml:lang="EN"
                    xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code
                        href="../samples/metadef-namespace-update-response.json"/>
                </wadl:doc>
            </representation>
        </response>
    </method>
    <method name="DELETE" id="deleteNamespace-v2">
        <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook"
            title="Delete namespace">
            <para role="shortdesc">
                Deletes a namespace and its properties, objects, and any
                resource type associations.
            </para>
            <para>
                You cannot delete namespaces with the <code>protected</code>
                attribute set to <code>true</code> (boolean); the response returns the HTTP
                <code>403</code> response code.
            </para>
            <para>
                To delete a namespace, you must first make an update namespace
                request to set the <code>protected</code> attribute to false
                (boolean) on the namespace. Then, delete the namespace.
            </para>
            <para>
                A successful operation returns the HTTP <code>204</code>
                response code.
            </para>
            <para>
                If you try to remove a namespace with the
                <code>protected</code> attribute set to true (boolean), the
                operation fails and the response returns the HTTP
                <code>403</code> response code.
            </para>
        </wadl:doc>
        <response status="204"/>
        &fault403;
    </method>
</application>
